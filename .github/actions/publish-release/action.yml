name: "Publish Release"
description: "Publishes a release to Github and npm"

inputs:
  branchName:
    description: 'The branch name of from which this release was triggered'
    required: false
    default: 'latest'
  githubToken:
    description: 'The Github auth token'
    required: false
    default: 'latest'
  npmToken:
    description: 'The npm auth token'
    required: false
    default: 'latest'

runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Project
      uses: ./.github/actions/setup

    - name: Build Project
      run: npm run build
      shell: bash

    - name: Get Next Release Version
      env:
        GITHUB_TOKEN: ${{ inputs.githubToken }}
      id: get_release_version
      run: |
        export NEXT_TAG_VERSION=$(npx semantic-release --dry-run | grep 'The next release version is' | sed -E 's/.* ([[:digit:].]+)$/\1/')
        echo "new_tag_version=${NEXT_TAG_VERSION}" >> $GITHUB_OUTPUT
      shell: bash

    - name: Semantic Release
      env:
        GITHUB_TOKEN: ${{ inputs.githubToken }}
      if: ${{ steps.get_release_version.outputs.new_tag_version != '' }}
      run: npx semantic-release
      shell: bash

    - name: Publish to npm
      env:
        NODE_AUTH_TOKEN: ${{ inputs.npmToken }}
      if: ${{ steps.get_release_version.outputs.new_tag_version != '' }}
      run: npm publish ./dist/*.tgz --tag ${{ inputs.branchName == 'main' && 'latest' || inputs.branchName }}
      shell: bash
